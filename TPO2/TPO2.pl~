:-module(TPO2,_).
:-use_package(clpfd).%< y >
:- use_module(library(lists)).
:- use_module(library(hiordlib)).

% [_,_,_,2,_,_,_,_]
% [2,_,_,_,4,_,_,_]
% [_,_,_,_,_,_,_,_]
% [2,_,_,_,3,_,2,_]
% [_,2,_,2,_,_,_,_]
% [2,_,2,_,_,_,2,_]
% [_,_,_,_,_,_,_,_]
% [_,_,_,_,2,_,_,_]

% [00,01,02,03,04,05,06,07]
% [10,11,12,13,14,15,16,17]
% [20,21,22,23,24,25,26,27]
% [30,31,32,33,34,35,36,37]
% [40,41,42,43,44,45,46,47]
% [50,51,52,53,54,55,56,57]
% [60,61,62,63,64,65,66,67]
% [70,71,72,73,74,75,76,77]

%caballo +- 6 10 15 17
%alfil +- 9 18 27 36
%torre +- 
%  
%Tab = [V00,V01,V02,V03,V04,V05,V06,V07,
%       V08,V09,V10,V11,V12,V13,V14,V15,
%       V16,V17,V18,V19,V20,V21,V22,V23,
%       V24,V25,V26,V27,V28,V29,V30,V31,
%       V31,V32,V33,V34,V35,V36,V37,V38,
%       V39,V40,V41,V42,V43,V44,V45,V46,
%       V47,V48,V49,V50,V51,V52,V52,V53,
%       V54,V55,V56,V57,V58,V59,V60,V61],
%    Tab in 0..61.

prueba(M):-
    %Se define los casilleros del tablero de ajedrez
    L1 =[_,_,_,2,_,_,_,_],
    L2 =[2,_,_,_,4,_,_,_],
    L3 =[_,_,_,_,_,_,_,_],
    L4 =[2,_,_,_,3,_,2,_],
    L5 =[_,2,_,2,_,_,_,_],
    L6 =[2,_,2,_,_,_,2,_],
    L7 =[_,_,_,_,_,_,_,_],
    L8 =[_,_,_,_,2,_,_,_],
    %El tablero es una lista de 8 listas de 8 elementos cada una.
    T=[L1,L2,L3,L4,L5,L6,L7,L8],
    recorrer_Tablero(T,M).

    %V1=[2,5,4],
    %V2=[4,5,3],
main2:-
    (pos_torre(TF,TC,(4,8),T1),
     pos_caballo(CF,CC,(4,8),C1),
     pos_alfil(AF,AC,(4,8),A1),
     pos_reina(RF,RC,(4,8),R1)),
    T1+C1+A1+R1#=2.
main(TC):-
%    (pos_torre(F,C,(4,4),T),
%    pos_torre(F,C,(5,6),M),
%    pos_torre(F,C,(6,5),M1)),
%    T+M+M1#=2.
    (pos_torre(TF,TC,(4,8),T1),
     pos_caballo(CF,CC,(4,8),C1),
     pos_alfil(AF,AC,(4,8),A1),
     pos_reina(RF,RC,(4,8),R1)),
    T1+C1+A1+R1#=2,
    (pos_torre(TF,TC,(1,7),T2),
     pos_caballo(CF,CC,(1,7),C2),
     pos_alfil(AF,AC,(1,7),A2),
     pos_reina(RF,RC,(1,7),R2)),
    T2+C2+A2+R2#=2,
    (pos_torre(TF,TC,(5,7),T3),
     pos_caballo(CF,CC,(5,7),C3),
     pos_alfil(AF,AC,(5,7),A3),
     pos_reina(RF,RC,(5,7),R3)),
    T3+C3+A3+R3#=4,    
    display('Posicion Torre '),
    display(TC),
    display(','),
    display(TF),
    nl,
    display('Posicion caballo '),
    display(CC),
    display(','),
    display(CF),
    nl,
    display('Posicion Alfil '),
    display(AC),
    display(','),
    display(AF),
    nl,
    display('Posicion Reina '),
    display(RC),
    display(','),
    display(RF),
    nl.
pos_torre(F,C,(X,Y),1):-
    (F in 1..8,
    C in 1..8,
    X in 1..8,
    Y in 1..8),
    ((F #= Y,
    C #\=X);
    (F #\=Y,C #= X)),
    label([F,C]).
pos_torre(_,_,(_,_),0):-!.
pos_caballo(F,C,(X,Y),1):-
    (F in 1..8,
    C in 1..8,
    X in 1..8,
    Y in 1..8),
    ((F #=Y+1;F #= Y-1),(C#= X+2; C#= X-2));
    ((F #=Y+2;F #= Y-2),(C#= X+1; C#= X-1)),
    label([F,C]).
pos_caballo(_,_,(_,_),0):-!.
pos_alfil(F,C,(X,Y),1):-
    (F in 1..8,
    C in 1..8,
    X in 1..8,
    Y in 1..8,
    M in 1..8),
    ((C#=X-M,(F#=Y+M;F#=Y-M));
    (C#=X+M,(F#=Y+M;F#=Y-M))),
    label([F,C]).
pos_alfil(_,_,(_,_),0):-!.
pos_reina(F,C,(X,Y),1):-
    (F in 1..8,
    C in 1..8,
    X in 1..8,
    Y in 1..8,
    M in 1..8),
    ((F #= Y,C #\=X);(F #\=Y,C #= X);
    (C#=X-M,(F#=Y+M;F#=Y-M)); (C#=X+M,(F#=Y+M;F#=Y-M))),
    label([F,C]).
pos_reina(_,_,(_,_),0):-!.
recorrer_Tablero([],_).
recorrer_Tablero([H|T],[M|N]):-
    recorrerAux(H,M),
    recorrer_Tablero(T,N).
recorrerAux([],[]).
recorrerAux([H|T],[H|N]):-
    H in 2..4,
    recorrerAux(T,N).
recorrerAux([H|T],[M|N]):-
    H in 2..4,
    M is 1,
    recorrerAux(T,N).
